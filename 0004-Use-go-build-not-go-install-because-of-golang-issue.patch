From f982e05d89db106e9b99317359fb45ab9c066fd3 Mon Sep 17 00:00:00 2001
From: Eric Paris <eparis@redhat.com>
Date: Thu, 4 Sep 2014 11:29:22 -0400
Subject: [PATCH 4/6] Use go build, not go install because of golang issue

If you don't have write permission to the location of the 3rd party
deps, you can't use go install
  https://code.google.com/p/go/issues/detail?id=8521
---
 hack/build-go.sh | 20 ++++++++++++++++----
 1 file changed, 16 insertions(+), 4 deletions(-)

diff --git a/hack/build-go.sh b/hack/build-go.sh
index a0b3ad9..2e95ae7 100755
--- a/hack/build-go.sh
+++ b/hack/build-go.sh
@@ -39,7 +39,9 @@ eval "goflags=(${GOFLAGS:-})"
 
 targets=()
 for arg; do
-  if [[ "${arg}" == -* ]]; then
+  if [[ "${arg}" == "--build" ]]; then
+    USE_BUILD=true
+  elif [[ "${arg}" == -* ]]; then
     # Assume arguments starting with a dash are flags to pass to go.
     goflags+=("${arg}")
   else
@@ -59,6 +61,16 @@ echo "Building local go components"
 # (release/build-release.sh) for our cluster deploy.  If we add more command
 # line options to our standard build we'll want to duplicate them there.  As we
 # move to distributing pre- built binaries we can eliminate this duplication.
-go install "${goflags[@]:+${goflags[@]}}" \
-    -ldflags "${version_ldflags}" \
-    "${binaries[@]}"
+if [ ! -z ${USE_BUILD-} ]; then
+  for bin in ${binaries}; do
+    echo "+++ Building ${bin}"
+    go build -o "output/go/bin/$(basename ${bin})" \
+	    "${goflags[@]:+${goflags[@]}}" \
+	    -ldflags "${version_ldflags}" \
+	    "${bin}"
+  done
+else
+  go install "${goflags[@]:+${goflags[@]}}" \
+      -ldflags "${version_ldflags}" \
+      "${binaries[@]}"
+fi
-- 
1.9.3

